#include <SPI.h>
#include <MFRC522.h>
#define PORTA_AN 0
#define PORTA_DIG 3 
#define SS_PIN 10
#define RST_PIN 9

// Definicoes pino modulo RC522
MFRC522 mfrc522(SS_PIN, RST_PIN); 
// portas do sensor de fuma√ßa
int buzzer = 4;
bool dSensor;
int aSensor;
// portas para abertura e fechamento de cancela.
int port1 = 5;
int port2 = 3;
// Leds indicadores acesso liberado ou negado
int led_liberado = 7;
int led_negado = 6;
bool condicao = false;
char st[20];
String listId[] = {"E3D2F71B","99AA1E63","D1A11C20"};

void setup() 
{
  
  pinMode(led_liberado, OUTPUT);
  pinMode(led_negado, OUTPUT);
  // Inicia a serial
  Serial.begin(9600);
  // Inicia  SPI bus
  SPI.begin();
  // Inicia MFRC522
  mfrc522.PCD_Init();
  // Buzzer
  pinMode(buzzer,OUTPUT);
  // Mensagens iniciais no serial monitor
  Serial.println("Aproxime o seu cartao do leitor...");
  Serial.println();
}

void LeRFID(){
  // Aguarda a aproximacao do cartao
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Seleciona um dos cartoes
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  // Mostra UID na serial
  Serial.println("UID da tag :");
  String conteudo= "";
  byte letra;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : "");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     conteudo.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : ""));
     conteudo.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Mensagem : ");
  conteudo.toUpperCase();
  
  // Testa se o cartao1 foi lido
  for (int i = 0; i<(sizeof(listId)/sizeof(String));i++)
  {
    //if (conteudo.substring(1) == "")
    if (conteudo.equalsIgnoreCase(listId[i]))
    {
      condicao = true;
      break;
    }
    else
    {
      condicao = false;
    }
  }
  
    // Levanta a cancela e acende o led verde
    if (condicao == true)
    {
       digitalWrite(led_liberado, HIGH);
       Serial.println(" Acesso liberado !");
       Serial.println();
       delay(1000);
       digitalWrite(port1,HIGH);
       digitalWrite(port2,LOW);
      
       digitalWrite(led_liberado, LOW);
    }
    else
    {
      Serial.println(" Acesso negado !!");
      Serial.println();
      // Serial.println(" Deseja cadastrar TAG");
      //Serial.println(" 1 p/ sim e 2 / nao");
      // Pisca o led vermelho
        for (int i= 1; i<5 ; i++)
         {
           digitalWrite(led_negado, HIGH);
           delay(100);
           digitalWrite(led_negado, LOW);
           delay(100);
         }
     }
}

void LeFumaca()
{
  dSensor = digitalRead(PORTA_DIG);
  aSensor = analogRead(PORTA_AN);

  Serial.print(" leitura DIg:");
  Serial.println(dSensor);

  Serial.print("leitura analogica:");
  Serial.println(aSensor);

  if (aSensor > 300)
  {
    for (int i= 1; i<5 ; i++)
    {
      digitalWrite(buzzer, HIGH);
      delay(100);
      digitalWrite(buzzer, LOW);
      delay(100);
    }
  }
  Serial.println();
}

void loop() 
{
  LeRFID();
  LeFumaca();
  
  delay(1500);
}
